{"version":3,"sources":["redux/action-types.js","redux/reducers.js","redux/store.js","redux/actions.js","view/main_completed.jsx","view/main_active.jsx","view/main_all.jsx","component/main.jsx","container/app/app.jsx","index.js"],"names":["ADD_NEW_LIST","DELETE_LIST","CHECKBOX_CHECKED","CLEAR_COMPLETED_LIST","SELECT_ALL_LIST","getUniqueID","randomLength","idStr","Date","now","toString","Math","random","substr","list","id","content","checked","combineReducers","todoList","state","arguments","length","undefined","actions","type","concat","Object","toConsumableArray","data","filter","item","map","createStore","reducers","deleteList","checkboxChecked","Completed","handleDeleteList","_this","props","handleCheckbox","_this2","this","completedList","react_default","a","createElement","key","onChange","style","textDecoration","onClick","Component","withRouter","connect","Active","activeList","All","Main","handleInputValue","e","addNewList","input","refs","keyCode","value","trim","handleCompletedList","clearCompletedList","handleSelectAll","total","_this$props","selectAllList","forEach","remainList","display","s","className","title","placeholder","autoFocus","ref","onKeyUp","react_router","exact","path","component","react_router_dom","activeClassName","to","newList","boolean","ReactDOM","render","es","store","app","document","getElementById"],"mappings":"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","file":"static/js/main.afcbab15.chunk.js","sourcesContent":["export const ADD_NEW_LIST = 'add_new_list'\r\nexport const DELETE_LIST = 'delete_list'\r\nexport const CHECKBOX_CHECKED = 'checkbox_checked'\r\nexport const CLEAR_COMPLETED_LIST = 'clear_completed_list'\r\nexport const SELECT_ALL_LIST = 'select_all_list'\r\n","import {combineReducers} from 'redux'\r\n\r\nimport {\r\n\tADD_NEW_LIST, \r\n\tDELETE_LIST, \r\n\tCHECKBOX_CHECKED, \r\n\tCLEAR_COMPLETED_LIST,\r\n\tSELECT_ALL_LIST\r\n} from './action-types'\r\n\r\n// set a func to get an unique id for each list\r\nconst getUniqueID = (randomLength) => {\r\n\tlet idStr = Date.now().toString(36)\r\n\tidStr += Math.random().toString(36).substr(3,randomLength)\r\n\treturn idStr\r\n}\r\n\r\nconst list = [\r\n\t{id : getUniqueID(), content : 'shopping', checked : false},\r\n\t{id : getUniqueID(), content : 'cooking', checked : false},\r\n]\r\n\r\nfunction todoList (state = list, actions) {\r\n\tswitch(actions.type) {\r\n\t\tcase ADD_NEW_LIST :\r\n\t\t\treturn [...state,{id : getUniqueID(), content : actions.data, checked : false}]\r\n\t\tcase DELETE_LIST :\r\n\t\t\treturn state.filter(item => item.id !== actions.data)\r\n\t\tcase CHECKBOX_CHECKED :\r\n\t\t\treturn (\r\n\t\t\t\tstate.map(item => {\r\n\t\t\t\t\tif(item.id === actions.data) {\r\n\t\t\t\t\t\treturn {id : item.id, content : item.content, checked : !item.checked}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {id : item.id, content : item.content, checked : item.checked}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\tcase CLEAR_COMPLETED_LIST :\r\n\t\t\treturn state.filter(item => item.checked === false)\r\n\t\tcase SELECT_ALL_LIST :\r\n\t\t\treturn state.map(item => ({id : item.id, content : item.content, checked : actions.data}))\r\n\t\tdefault :\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default combineReducers({\r\n\ttodoList\r\n})","\r\nimport {createStore} from 'redux'\r\n\r\nimport reducers from './reducers'\r\n\r\nexport default createStore(reducers)","import {\r\n\tADD_NEW_LIST,\r\n\tDELETE_LIST, \r\n\tCHECKBOX_CHECKED, \r\n\tCLEAR_COMPLETED_LIST,\r\n\tSELECT_ALL_LIST\r\n} from './action-types'\r\n\r\nexport const addNewList = (newList) => ({type : ADD_NEW_LIST, data : newList})\r\nexport const deleteList = (id) => ({type : DELETE_LIST, data : id})\r\nexport const checkboxChecked = (id) => ({type : CHECKBOX_CHECKED, data :id})\r\nexport const clearCompletedList = () => ({type : CLEAR_COMPLETED_LIST, data : null})\r\nexport const selectAllList = (boolean) => ({type : SELECT_ALL_LIST, data : boolean})\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n\tdeleteList, \r\n\tcheckboxChecked,\r\n} from '../redux/actions'\r\n\r\nclass Completed extends Component {\r\n\t\r\n\tstatic propTypes = {\r\n\t\tdeleteList : PropTypes.func.isRequired,\r\n\t\ttodoList : PropTypes.array.isRequired,\r\n\t\tcheckboxChecked : PropTypes.func.isRequired\r\n\t}\r\n\r\n\t// delete item\t\r\n\thandleDeleteList = (id) => {\r\n\t\tconst {deleteList} = this.props\r\n\t\tdeleteList(id)\r\n\t}\r\n\r\n\t//check box tick\r\n\thandleCheckbox = (id) => {\r\n\t\tconst {checkboxChecked} = this.props\r\n\t\tcheckboxChecked(id)\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst {todoList} = this.props;\r\n\t\tconst completedList = todoList.filter(item => item.checked === true)\t\r\n\t\treturn (\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\tcompletedList.map(item => (\r\n\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={item.checked} onChange={() => this.handleCheckbox(item.id)}/>\r\n\t\t\t\t\t\t\t\t<p style={{textDecoration : item.checked ? 'line-through' : 'none'}}>{item.content}</p>\r\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleDeleteList(item.id)}>Delete</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(connect(\r\n\tstate => ({todoList : state.todoList}),\r\n\t{deleteList, checkboxChecked}\r\n)(Completed))","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {deleteList, checkboxChecked} from '../redux/actions'\r\n\r\nclass Active extends Component {\r\n\r\n\tstatic propTypes = {\r\n\t\tdeleteList : PropTypes.func.isRequired,\r\n\t\ttodoList : PropTypes.array.isRequired,\r\n\t\tcheckboxChecked : PropTypes.func.isRequired\r\n\t}\r\n\r\n\t// delete item\t\r\n\thandleDeleteList = (id) => {\r\n\t\tconst {deleteList} = this.props\r\n\t\tdeleteList(id)\r\n\t}\r\n\r\n\t//check box tick\r\n\thandleCheckbox = (id) => {\r\n\t\tconst {checkboxChecked} = this.props\r\n\t\tcheckboxChecked(id)\r\n\t}\r\n\t\r\n\trender () {\r\n\t\tconst {todoList} = this.props;\r\n\t\tconst activeList = todoList.filter(item => item.checked === false)\r\n\t\treturn (\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\tactiveList.map(item => (\r\n\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={item.checked} onChange={() => this.handleCheckbox(item.id)}/>\r\n\t\t\t\t\t\t\t\t<p style={{textDecoration : item.checked ? 'line-through' : 'none'}}>{item.content}</p>\r\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleDeleteList(item.id)}>Delete</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(connect(\r\n\tstate => ({todoList : state.todoList}),\r\n\t {deleteList, checkboxChecked}\r\n)(Active))","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n\tdeleteList, \r\n\tcheckboxChecked, \r\n} from '../redux/actions'\r\n\r\nclass All extends Component {\r\n\r\n\tstatic propTypes = {\r\n\t\tdeleteList : PropTypes.func.isRequired,\r\n\t\ttodoList : PropTypes.array.isRequired,\r\n\t\tcheckboxChecked : PropTypes.func.isRequired\r\n\t}\r\n\r\n\t// delete item\t\r\n\thandleDeleteList = (id) => {\r\n\t\tconst {deleteList} = this.props\r\n\t\tdeleteList(id)\r\n\t}\r\n\r\n\t//check box tick\r\n\thandleCheckbox = (id) => {\r\n\t\tconst {checkboxChecked} = this.props\r\n\t\tcheckboxChecked(id)\r\n\t}\r\n\r\n\trender () {\r\n\t\t\r\n\t\tconst {todoList} = this.props;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\ttodoList.map(item => (\r\n\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={item.checked} onChange={() => this.handleCheckbox(item.id)}/>\r\n\t\t\t\t\t\t\t\t<p style={{textDecoration : item.checked ? 'line-through' : 'none'}}>{item.content}</p>\r\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleDeleteList(item.id)}>Delete</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n}\r\nexport default withRouter(connect(\r\n\tstate => ({todoList : state.todoList}),\r\n\t{deleteList, checkboxChecked}\r\n)(All))","import React, {Component} from 'react'\r\nimport {NavLink, Route, Switch} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Completed from '../view/main_completed'\r\nimport Active from '../view/main_active'\r\nimport All from '../view/main_all'\r\n\r\nexport default class Main extends Component {\r\n\r\n\tstatic propTypes = {\r\n\t\tclearCompletedList : PropTypes.func.isRequired,\r\n\t\ttodoList : PropTypes.array.isRequired,\r\n\t\tselectAllList : PropTypes.func.isRequired\r\n\t}\r\n\r\n// use refs to get input value and then send to reducer to get updated\r\n\thandleInputValue = (e) => {\r\n\t\tconst {addNewList} = this.props\r\n\t\tconst {input} = this.refs\r\n\t\tif(e.keyCode === 13 && input.value.trim()){\r\n\t\t\taddNewList(input.value)\r\n\t\t\tinput.value = ''\r\n\t\t}\r\n\t}\r\n\r\n// clear all completed list\r\n\thandleCompletedList = () => {\r\n\t\tconst {clearCompletedList} = this.props\r\n\t\tclearCompletedList()\r\n\t}\r\n//select all checkbox or unselect all checkbox\r\n\thandleSelectAll = () => {\r\n\t\tlet total = 0\r\n\t\tconst {todoList,selectAllList} = this.props\r\n\t\ttodoList.forEach(item => {\r\n\t\t\tif(item.checked){\r\n\t\t\t\ttotal += 1\r\n\t\t\t}\r\n\t\t})\r\n\t\tif(todoList && todoList.length === total) {\r\n\t\t\tselectAllList(false)\r\n\t\t} else {\r\n\t\t\tselectAllList(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender () {\r\n\r\n\t\tconst {todoList} = this.props\r\n\t\tconst remainList = todoList.filter(item => item.checked === false)\r\n\t\tconst display = remainList.length === todoList.length ? 'none' : 'block'\r\n\t\tconst s = remainList.length <= 1 ? '' : 's'\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<span title=\"select all\" onClick={this.handleSelectAll}>O</span> \r\n\t\t\t\t<input type=\"text\" placeholder=\"what you want to do\" autoFocus ref='input' onKeyUp={e => this.handleInputValue(e)}/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t  <Route exact path='/' component={All}/>\r\n\t                  <Route path='/active' component={Active}/>\r\n\t                  <Route path='/completed' component={Completed}/>\r\n\t                 \r\n\t            </Switch>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<span className=\"left\"><b>{remainList.length}</b> item{s} left</span>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><NavLink exact activeClassName=\"selected\" to='/'>All</NavLink></li>\r\n\t\t\t\t\t\t<li><NavLink activeClassName=\"selected\" to='/active'>Active</NavLink></li>\r\n\t\t\t\t\t\t<li><NavLink activeClassName=\"selected\" to='/completed'>Completed</NavLink></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<span className=\"right\" style={{display}} onClick={this.handleCompletedList}>clear completed</span>\r\n\t\t\t\t</footer>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","\r\nimport {connect} from 'react-redux'\r\n\r\nimport Main from '../../component/main'\r\nimport {\r\n\taddNewList, \r\n\tclearCompletedList,\r\n\tselectAllList\r\n} from '../../redux/actions'\r\n\r\nexport default connect(\r\n\tstate => ({todoList : state.todoList}),\r\n\t{addNewList, clearCompletedList, selectAllList}\r\n)(Main)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport {Provider} from 'react-redux'\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nimport store from './redux/store'\r\nimport App from './container/app/app'\r\n\r\nReactDOM.render((\r\n\t\t<Provider store={store}>\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<App />\r\n\t\t\t</HashRouter>\r\n\t\t</Provider>\r\n\t),\r\ndocument.getElementById('root')\r\n)"],"sourceRoot":""}